version: 2
jobs:
  build:
    working_directory: ~/circle/git/fb-av
    docker:
      - image: asmega/fb-builder:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: npm install
          command: 'npm install'
      - run:
          name: KUBE_CERTIFICATE_AUTHORITY to disk
          command: 'echo -n "$KUBE_CERTIFICATE_AUTHORITY" | base64 -d > /root/circle/.kube_certificate_authority'
      - run:
          name: kubectl configure cluster
          command: 'kubectl config set-cluster "$KUBE_CLUSTER" --certificate-authority="/root/circle/.kube_certificate_authority" --server="$KUBE_SERVER"'
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci" --token="$KUBE_TOKEN"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci" --cluster="$KUBE_CLUSTER" --user="circleci" --namespace="formbuilder-repos"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci'
      - run:
          name: build and push docker images
          command: 'cd ~/circle/git/fb-av && ./scripts/build_platform_images.sh -p test'
      # configure to deploy to test dev
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci_test_dev" --token="$KUBE_TOKEN_TEST_DEV"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci_test_dev" --cluster="$KUBE_CLUSTER" --user="circleci_test_dev" --namespace="formbuilder-platform-test-dev"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci_test_dev'
      - run:
          name: apply kubernetes changes to test dev
          command: './scripts/deploy_platform.sh -p test -d dev'
      - run:
          name: delete pods in test dev
          command: './scripts/restart_platform_pods.sh -p test -d dev -c circleci_test_dev'
      # configure to deploy to test staging
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci_test_staging" --token="$KUBE_TOKEN_TEST_STAGING"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci_test_staging" --cluster="$KUBE_CLUSTER" --user="circleci_test_staging" --namespace="formbuilder-platform-test-staging"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci_test_staging'
      - run:
          name: apply kubernetes changes to test staging
          command: './scripts/deploy_platform.sh -p test -d staging'
      - run:
          name: delete pods in test staging
          command: './scripts/restart_platform_pods.sh -p test -d staging -c circleci_test_staging'
      # configure to deploy to test production
      - run:
          name: kubectl configure credentials
          command: 'kubectl config set-credentials "circleci_test_production" --token="$KUBE_TOKEN_TEST_PRODUCTION"'
      - run:
          name: kubectl configure context
          command: 'kubectl config set-context "circleci_test_production" --cluster="$KUBE_CLUSTER" --user="circleci_test_production" --namespace="formbuilder-platform-test-production"'
      - run:
          name: kubectl use circleci context
          command: 'kubectl config use-context circleci_test_production'
      - run:
          name: apply kubernetes changes to test production
          command: './scripts/deploy_platform.sh -p test -d production'
      - run:
          name: delete pods in test production
          command: './scripts/restart_platform_pods.sh -p test -d production -c circleci_test_production'

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only: master
